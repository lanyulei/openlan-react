/**
 * @name umi 的路由配置
 * @description 只支持 path,component,routes,redirect,wrappers,name,icon 的配置
 * @param path  path 只支持两种占位符配置，第一种是动态参数 :id 的形式，第二种是 * 通配符，通配符只能出现路由字符串的最后。
 * @param component 配置 location 和 path 匹配后用于渲染的 React 组件路径。可以是绝对路径，也可以是相对路径，如果是相对路径，会从 src/pages 开始找起。
 * @param routes 配置子路由，通常在需要为多个路径增加 layout 组件时使用。
 * @param redirect 配置路由跳转
 * @param wrappers 配置路由组件的包装组件，通过包装组件可以为当前的路由组件组合进更多的功能。 比如，可以用于路由级别的权限校验
 * @param name 配置路由的标题，默认读取国际化文件 menu.ts 中 menu.xxxx 的值，如配置 name 为 login，则读取 menu.ts 中 menu.login 的取值作为标题
 * @param icon 配置路由的图标，取值参考 https://ant.design/components/icon-cn， 注意去除风格后缀和大小写，如想要配置图标为 <StepBackwardOutlined /> 则取值应为 stepBackward 或 StepBackward，如想要配置图标为 <UserOutlined /> 则取值应为 user 或者 User
 * @doc https://umijs.org/docs/guides/routes
 */
export default [
  {
    path: '/user',
    layout: false,
    routes: [
      {
        name: 'login',
        path: '/user/login',
        component: './UserCenter/Login',
      },
    ],
  },
  {
    path: '/home',
    name: 'home',
    icon: 'home',
    component: './Home',
  },
  {
    path: '/resource',
    name: 'resource',
    icon: 'database',
    access: 'routeFilter',
    code: 'resource',
    routes: [
      {
        path: '/resource',
        redirect: '/resource/search',
        access: 'routeFilter',
        code: 'resource:search',
      },
      {
        path: '/resource/search',
        name: 'search',
        component: './Resource/Search',
        access: 'routeFilter',
        code: 'resource:search',
      },
      {
        path: '/resource/directory',
        name: 'directory',
        component: './Resource/Directory',
        access: 'routeFilter',
        code: 'resource:directory',
      },
      {
        path: '/resource/model',
        name: 'model',
        component: './Resource/Model',
        access: 'routeFilter',
        code: 'resource:model',
      },
      {
        path: '/resource/cloud/account',
        name: 'cloudAccount',
        component: './Resource/Cloud/Account',
        access: 'routeFilter',
        code: 'resource:cloud:account',
      },
      {
        path: '/resource/cloud/logic-resource',
        name: 'logicResource',
        component: './Resource/Cloud/LogicResource',
        access: 'routeFilter',
        code: 'resource:cloud:logicResource',
      },
      {
        path: '/resource/cloud/logic-resource-details/:id',
        name: 'logicResourceDetails',
        component: './Resource/Cloud/LogicResource/details',
        hideInMenu: true,
        access: 'routeFilter',
        code: 'resource:cloud:logicResourceDetails',
      },
      {
        path: '/resource/plugins',
        name: 'plugins',
        component: './Resource/Plugins',
        access: 'routeFilter',
        code: 'resource:plugins',
      },
      {
        path: '/resource/model-details/:id',
        name: 'modelDetails',
        component: './Resource/Model/details',
        hideInMenu: true,
        access: 'routeFilter',
        code: 'resource:modelDetails',
      },
      {
        path: '/resource/data/:id',
        name: 'data',
        component: './Resource/Data',
        hideInMenu: true,
        access: 'routeFilter',
        code: 'resource:data',
      },
      {
        path: '/resource/data/details/:modelId/:id',
        name: 'dataDetails',
        component: './Resource/Data/details',
        hideInMenu: true,
        access: 'routeFilter',
        code: 'resource:data:details',
      },
    ],
  },
  {
    path: '/deploy',
    name: 'deploy',
    icon: 'appstore',
    access: 'routeFilter',
    code: 'deploy',
    routes: [
      {
        path: '/deploy',
        redirect: '/deploy/overview',
        access: 'routeFilter',
        code: 'deploy:overview',
      },
      {
        path: '/deploy/overview',
        name: 'overview',
        component: './Deploy/Overview',
        access: 'routeFilter',
        code: 'deploy:overview',
      },
      {
        path: '/deploy/task',
        name: 'task',
        component: './Deploy/Task',
        access: 'routeFilter',
        code: 'deploy:task',
      },
      {
        path: '/deploy/taskruns',
        name: 'taskRuns',
        component: './Deploy/TaskRun',
        access: 'routeFilter',
        code: 'deploy:taskRuns',
      },
      {
        path: '/deploy/taskruns/details/:namespace/:name',
        name: 'taskRunsDetails',
        component: './Deploy/TaskRun/Details',
        hideInMenu: true,
        access: 'routeFilter',
        code: 'deploy:taskRuns:details',
      },
      {
        path: '/deploy/task/create',
        name: 'createTask',
        component: './Deploy/Task/create',
        hideInMenu: true,
        access: 'routeFilter',
        code: 'deploy:task:create',
      },
      {
        path: '/deploy/task/edit/:namespace/:name',
        name: 'editTask',
        component: './Deploy/Task/edit',
        hideInMenu: true,
        access: 'routeFilter',
        code: 'deploy:task:edit',
      },
      {
        path: '/deploy/pipeline',
        name: 'pipeline',
        component: './Deploy/Pipeline',
        access: 'routeFilter',
        code: 'deploy:pipeline',
      },
      {
        path: '/deploy/pipelineruns',
        name: 'pipelineRuns',
        component: './Deploy/PipelineRun',
        access: 'routeFilter',
        code: 'deploy:pipelineRuns',
      },
      {
        path: '/deploy/stepactions',
        name: 'stepActions',
        component: './Deploy/StepAction',
        access: 'routeFilter',
        code: 'deploy:stepActions',
      },
      {
        path: '/deploy/customruns',
        name: 'customRuns',
        component: './Deploy/CustomRun',
        access: 'routeFilter',
        code: 'deploy:customRuns',
      },
      {
        path: '/deploy/eventlisteners',
        name: 'eventListeners',
        component: './Deploy/EventListener',
        access: 'routeFilter',
        code: 'deploy:eventListeners',
      },
      {
        path: '/deploy/triggers',
        name: 'triggers',
        component: './Deploy/Trigger',
        access: 'routeFilter',
        code: 'deploy:triggers',
      },
      {
        path: '/deploy/triggerbindings',
        name: 'triggerBindings',
        component: './Deploy/TriggerBinding',
        access: 'routeFilter',
        code: 'deploy:triggerBindings',
      },
      {
        path: '/deploy/clustertriggerbindings',
        name: 'clusterTriggerBindings',
        component: './Deploy/ClusterTriggerBinding',
        access: 'routeFilter',
        code: 'deploy:clusterTriggerBindings',
      },
      {
        path: '/deploy/triggertemplates',
        name: 'triggerTemplates',
        component: './Deploy/TriggerTemplate',
        access: 'routeFilter',
        code: 'deploy:triggerTemplates',
      },
      {
        path: '/deploy/interceptors',
        name: 'interceptors',
        component: './Deploy/Interceptor',
        access: 'routeFilter',
        code: 'deploy:interceptors',
      },
      {
        path: '/deploy/clusterinterceptors',
        name: 'clusterInterceptors',
        component: './Deploy/ClusterInterceptor',
        access: 'routeFilter',
        code: 'deploy:clusterInterceptors',
      },
      {
        path: '/deploy/pipelineruns/details/:namespace/:name',
        name: 'pipelineRunsDetails',
        component: './Deploy/PipelineRun/Details',
        hideInMenu: true,
        access: 'routeFilter',
        code: 'deploy:pipelineRuns:details',
      },
      {
        path: '/deploy/pipeline/create',
        name: 'createPipeline',
        component: './Deploy/Pipeline/create',
        hideInMenu: true,
        access: 'routeFilter',
        code: 'deploy:pipeline:create',
      },
      {
        path: '/deploy/pipeline/edit/:namespace/:name',
        name: 'editPipeline',
        component: './Deploy/Pipeline/edit',
        hideInMenu: true,
        access: 'routeFilter',
        code: 'deploy:pipeline:edit',
      },
    ],
  },
  {
    path: '/task',
    name: 'task',
    icon: 'AlignRight',
    access: 'routeFilter',
    code: 'task',
    routes: [
      {
        path: '/task',
        redirect: '/task/overview',
        access: 'routeFilter',
        code: 'task:overview',
      },
      {
        path: '/task/overview',
        name: 'overview',
        component: './Task/Overview',
        access: 'routeFilter',
        code: 'task:overview',
      },
      {
        path: '/task/template',
        name: 'template',
        component: './Task/Template',
        access: 'routeFilter',
        code: 'task:template',
      },
      {
        path: '/task/history',
        name: 'history',
        component: './Task/History',
        access: 'routeFilter',
        code: 'task:history',
      },
      {
        path: '/task/variable',
        name: 'variable',
        component: './Task/Variable',
        access: 'routeFilter',
        code: 'task:variable',
      },
      {
        path: '/task/inventory',
        name: 'inventory',
        component: './Task/Inventory',
        access: 'routeFilter',
        code: 'task:inventory',
      },
      {
        path: '/task/secret',
        name: 'secret',
        component: './Task/Secret',
        access: 'routeFilter',
        code: 'task:secret',
      },
    ],
  },
  {
    path: '/user-center',
    name: 'userCenter',
    icon: 'User',
    access: 'routeFilter',
    code: 'userCenter',
    routes: [
      {
        path: '/user-center',
        redirect: '/user-center/user',
        access: 'routeFilter',
        code: 'userCenter:user',
      },
      {
        path: '/user-center/user',
        name: 'user',
        component: './UserCenter/User',
        access: 'routeFilter',
        code: 'userCenter:user',
      },
      {
        path: '/user-center/role',
        name: 'role',
        component: './UserCenter/Role',
        access: 'routeFilter',
        code: 'userCenter:role',
      },
      {
        path: '/user-center/element',
        name: 'element',
        component: './UserCenter/Element',
        access: 'routeFilter',
        code: 'userCenter:element',
      },
      {
        path: '/user-center/role/:id/permission',
        name: 'rolePermission',
        component: './UserCenter/Role/permission',
        hideInMenu: true,
        access: 'routeFilter',
        code: 'userCenter:role:permission',
      },
    ],
  },
  // 内置配置
  {
    path: '/',
    redirect: '/home',
  },
  {
    path: '*',
    layout: false,
    component: './404',
  },
];
